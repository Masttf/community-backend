<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="fun.masttf.mapper.EmailCodeMapper">
	<!-- 实体类映射 -->
	<resultMap id="BaseResultMap" type="fun.masttf.entity.po.EmailCode">
		<!--邮箱 -->
		<result column="email" property="email" />
		<!--编号 -->
		<result column="code" property="code" />
		<!--创建时间 -->
		<result column="create_time" property="createTime" />
		<!--0:未使用  1:已使用 -->
		<result column="status" property="status" />
	</resultMap>

	<!-- 基础查询列 -->
	<sql id="BaseColumnList">
		email,code,create_time,status
	</sql>

	<!-- 基础查询条件 -->
	<sql id="BaseQueryCondition">
		<if test="query.email != null and query.email != ''">
			and email = #{query.email}
		</if>
		<if test="query.code != null and query.code != ''">
			and code = #{query.code}
		</if>
		<if test="query.createTime != null">
			and create_time = #{query.createTime}
		</if>
		<if test="query.status != null">
			and status = #{query.status}
		</if>
	</sql>

	<!-- 拓展的查询条件 -->
	<sql id="BaseQueryExtendCondition">
		<if test="query.emailFuzzy != null and query.emailFuzzy != ''">
			and email LIKE CONCAT('%', #{query.emailFuzzy}, '%')
		</if>
		<if test="query.codeFuzzy != null and query.codeFuzzy != ''">
			and code LIKE CONCAT('%', #{query.codeFuzzy}, '%')
		</if>
		<if test="query.createTimeStart != null and query.createTimeStart != ''">
			<![CDATA[ and create_time >= str_to_date(#{query.createTimeStart},'%Y-%m-%d') ]]>
		</if>
		<if test="query.createTimeEnd != null and query.createTimeEnd != ''">
			<![CDATA[ and create_time < DATE_ADD(str_to_date(#{query.createTimeEnd},'%Y-%m-%d'), INTERVAL 1 DAY) ]]>
		</if>
	</sql>

	<!-- 通用查询条件 -->
	<sql id="QueryCondition">
		<where>
			<include refid="BaseQueryCondition" />
			<include refid="BaseQueryExtendCondition" />
		</where>
	</sql>

	<!-- 查询列表 -->
	<select id="selectList"  resultMap="BaseResultMap">
		SELECT <include refid="BaseColumnList" /> FROM email_code <include refid="QueryCondition" />
		<if test="query.orderBy != null and query.orderBy != ''"> order by ${query.orderBy} </if>
		<if test="query.simplePage != null"> limit #{query.simplePage.start}, #{query.simplePage.end} </if>
	</select>

	<!-- 查询数量 -->
	<select id="selectCount"  resultType="java.lang.Integer">
		 SELECT count(1) FROM email_code <include refid="QueryCondition" />
	</select>

	<!-- 插入(匹配有效值) -->
	<insert id="insert">
		INSERT INTO email_code
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="bean.email != null">
				email,
			</if>
			<if test="bean.code != null">
				code,
			</if>
			<if test="bean.createTime != null">
				create_time,
			</if>
			<if test="bean.status != null">
				status,
			</if>
		</trim>
		<trim prefix="VALUES (" suffix=")" suffixOverrides=",">
			<if test="bean.email != null">
				#{bean.email},
			</if>
			<if test="bean.code != null">
				#{bean.code},
			</if>
			<if test="bean.createTime != null">
				#{bean.createTime},
			</if>
			<if test="bean.status != null">
				#{bean.status},
			</if>
		</trim>
	</insert>

	<!-- 插入或者更新(匹配有效值) -->
	<insert id="insertOrUpdate">
		INSERT INTO email_code
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="bean.email != null">
				email,
			</if>
			<if test="bean.code != null">
				code,
			</if>
			<if test="bean.createTime != null">
				create_time,
			</if>
			<if test="bean.status != null">
				status,
			</if>
		</trim>
		<trim prefix="VALUES (" suffix=")" suffixOverrides=",">
			<if test="bean.email != null">
				#{bean.email},
			</if>
			<if test="bean.code != null">
				#{bean.code},
			</if>
			<if test="bean.createTime != null">
				#{bean.createTime},
			</if>
			<if test="bean.status != null">
				#{bean.status},
			</if>
		</trim>
		<trim prefix="ON DUPLICATE KEY UPDATE" suffixOverrides=",">
			<if test="bean.createTime != null">
				create_time = VALUES(create_time),
			</if>
			<if test="bean.status != null">
				status = VALUES(status),
			</if>
		</trim>
	</insert>

	<!-- 添加(批量插入) -->
	<insert id="insertBatch">
		INSERT INTO email_code(email,code,create_time,status) VALUES
		<foreach collection="list" item="item" separator=",">
			(#{item.email},#{item.code},#{item.createTime},#{item.status})
		</foreach>
	</insert>

	<!-- 批量插入或更新(覆盖) -->
	<insert id="insertOrUpdateBatch">
		INSERT INTO email_code(email,code,create_time,status) VALUES
		<foreach collection="list" item="item" separator=",">
			(#{item.email},#{item.code},#{item.createTime},#{item.status})
		</foreach>
		ON DUPLICATE KEY UPDATE
		email = VALUES(email),code = VALUES(code),create_time = VALUES(create_time),status = VALUES(status)
	</insert>

	<!-- 根据EmailAndCode查询 -->
	<select id="selectByEmailAndCode" resultMap="BaseResultMap">
		SELECT <include refid="BaseColumnList" /> FROM email_code WHERE email = #{email} and code = #{code}
	</select>

	<!-- 根据EmailAndCode更新 -->
	<update id="updateByEmailAndCode">
		UPDATE email_code
		<set>
			<if test="bean.email != null">
				email = #{bean.email},
			</if>
			<if test="bean.code != null">
				code = #{bean.code},
			</if>
			<if test="bean.createTime != null">
				create_time = #{bean.createTime},
			</if>
			<if test="bean.status != null">
				status = #{bean.status},
			</if>
		</set>
		WHERE email = #{email} and code = #{code}
	</update>

	<!-- 根据EmailAndCode删除 -->
	<delete id="deleteByEmailAndCode">
		DELETE FROM email_code WHERE email = #{email} and code = #{code}
	</delete>

</mapper>
